# Generated by Django 5.0.7 on 2024-12-11 14:11

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
import phonenumber_field.modelfields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('catrinmodel', '0006_remove_order_ordered_food_list_orderedfood'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BankDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank_name', models.CharField(max_length=50)),
                ('account_holder', models.CharField(max_length=50)),
                ('account_no', models.CharField(max_length=50, unique=True)),
                ('ifsc_code', models.CharField(max_length=11, validators=[django.core.validators.RegexValidator(code='invalid_ifsc', message='Enter a valid IFSC code (e.g., ABCD0123456).', regex='^[A-Z]{4}0[A-Z0-9]{6}$')])),
                ('bank_type', models.CharField(choices=[('savings', 'Savings'), ('current', 'Current')], max_length=10)),
                ('branch', models.CharField(max_length=50)),
                ('entity_type', models.CharField(choices=[('user', 'User'), ('caterer', 'Caterer')], max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('is_exist', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='CancelledItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='CatererFood',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('extra_cost', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
            ],
        ),
        migrations.CreateModel(
            name='CateringBranch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('branch_name', models.CharField(max_length=45)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='CateringService',
            fields=[
                ('caterer_name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('image', models.ImageField(default=None, null=True, upload_to='caterer/')),
                ('gstin_number', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(code='invalid_gstin', message='Invalid GSTIN format.', regex='^[0-9]{2}[A-Z]{5}[0-9]{4}[A-Z]{1}[A-Z0-9]{3}$')])),
                ('caterer_id', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, primary_key=True, related_name='caterer_details', serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Delivery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delivery_date', models.DateField()),
                ('delivery_time', models.TimeField()),
                ('delivery_charge', models.DecimalField(decimal_places=2, max_digits=10)),
                ('period', models.CharField(choices=[('day', 'Day'), ('night', 'Night')], max_length=10)),
                ('delivery_note', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PhoneContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region='IN', unique=True)),
                ('entity_type', models.CharField(choices=[('user', 'User'), ('caterer', 'Caterer')], max_length=50)),
                ('phone_type', models.CharField(max_length=50)),
            ],
        ),
        migrations.RemoveField(
            model_name='catarerfood',
            name='food_id',
        ),
        migrations.RemoveField(
            model_name='catarerfood',
            name='user_id',
        ),
        migrations.RemoveField(
            model_name='caterer',
            name='user_id',
        ),
        migrations.RenameField(
            model_name='orderedfood',
            old_name='food_name',
            new_name='food',
        ),
        migrations.RemoveField(
            model_name='address',
            name='phone_number',
        ),
        migrations.RemoveField(
            model_name='address',
            name='user_id',
        ),
        # migrations.RemoveField(
        #     model_name='order',
        #     name='caterer_id',
        # ),
        migrations.RemoveField(
            model_name='order',
            name='delivery_address',
        ),
        migrations.RemoveField(
            model_name='order',
            name='delivery_charge',
        ),
        migrations.RemoveField(
            model_name='order',
            name='delivery_date',
        ),
        migrations.RemoveField(
            model_name='order',
            name='delivery_time',
        ),
        migrations.RemoveField(
            model_name='order',
            name='order_day',
        ),
        migrations.RemoveField(
            model_name='order',
            name='phone_number',
        ),
        migrations.RemoveField(
            model_name='order',
            name='user_id',
        ),
        migrations.RemoveField(
            model_name='payment',
            name='accountno',
        ),
        migrations.RemoveField(
            model_name='payment',
            name='bank_name',
        ),
        migrations.RemoveField(
            model_name='payment',
            name='bank_type',
        ),
        migrations.RemoveField(
            model_name='payment',
            name='branch',
        ),
        migrations.RemoveField(
            model_name='payment',
            name='caterer_id',
        ),
        migrations.RemoveField(
            model_name='payment',
            name='ifsc_code',
        ),
        migrations.RemoveField(
            model_name='payment',
            name='user_id',
        ),
        migrations.AddField(
            model_name='address',
            name='entity_type',
            field=models.CharField(choices=[('user', 'User'), ('caterer', 'Caterer')], default=django.utils.timezone.now, max_length=50),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='address',
            name='is_active',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='address',
            name='is_exist',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='address',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='addresses', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='order',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='user_orders', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='payment',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_bank_details', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='address',
            name='country',
            field=django_countries.fields.CountryField(default='IN', max_length=2),
        ),
        migrations.AlterField(
            model_name='address',
            name='latitude',
            field=models.DecimalField(decimal_places=6, default=11.1, max_digits=11),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='address',
            name='longitude',
            field=models.DecimalField(decimal_places=6, default=11.1, max_digits=11),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='address',
            name='state',
            field=models.CharField(max_length=20),
        ),
        migrations.AlterField(
            model_name='food',
            name='food_image',
            field=models.ImageField(default=None, null=True, upload_to='food/'),
        ),
        migrations.AlterField(
            model_name='food',
            name='menu_catagory',
            field=models.CharField(choices=[('juice', 'Juice'), ('veg_starter', 'Veg Starter'), ('nonveg_starter', 'Non-Veg Starter'), ('veg_main', 'Veg Main Course'), ('nonveg_main', 'Non-Veg Main Course'), ('BRD', 'Veg Bread,Rice,Noodles'), ('NBRD', 'Non-Veg Bread,Rice,Noodles'), ('dessert', 'Dessert')], max_length=50),
        ),
        migrations.AlterField(
            model_name='order',
            name='gstin',
            field=models.DecimalField(decimal_places=2, max_digits=10),
        ),
        migrations.AlterField(
            model_name='order',
            name='note',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='order',
            name='ordered_time',
            field=models.DateTimeField(auto_now_add=True),
        ),
        migrations.AlterField(
            model_name='order',
            name='status',
            field=models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('shipped', 'Shipped'), ('delivered', 'Delivered'), ('cancelled', 'Cancelled')], default='pending', max_length=20),
        ),
        migrations.AlterField(
            model_name='payment',
            name='paid_time',
            field=models.DateTimeField(auto_now_add=True),
        ),
        migrations.AddConstraint(
            model_name='orderedfood',
            constraint=models.UniqueConstraint(fields=('order', 'food'), name='unique_food_per_order'),
        ),
        migrations.AddField(
            model_name='bankdetails',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='bank_details', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='payment',
            name='receiver_bank',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='receiver_bank', to='catrinmodel.bankdetails'),
        ),
        migrations.AddField(
            model_name='payment',
            name='sender_bank',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='sender_bank', to='catrinmodel.bankdetails'),
        ),
        migrations.AddField(
            model_name='cancelleditems',
            name='order',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cancelled_items', to='catrinmodel.order'),
        ),
        migrations.AddField(
            model_name='catererfood',
            name='food_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='caterer_food_items', to='catrinmodel.food'),
        ),
        migrations.CreateModel(
            name='CateringPackage',
            fields=[
                ('branch_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='package_details', serialize=False, to='catrinmodel.cateringbranch')),
                ('starting_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('deliverable_area', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('delivery_charge', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('free_delivery_till_km', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('gst_for_food', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0)])),
                ('max_order_night', models.IntegerField(default=0)),
                ('max_order_day', models.IntegerField(default=0)),
                ('type', models.CharField(choices=[('veg', 'Vegetarian'), ('non-veg', 'Non-Vegetarian'), ('both', 'Both')], max_length=7)),
                ('advance_percentage', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('isavailable', models.BooleanField(default=True)),
            ],
        ),
        migrations.RenameModel(
            old_name='MenuCatagory',
            new_name='MenuCategory',
        ),
        migrations.AddField(
            model_name='catererfood',
            name='branch_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='caterer_food_details', to='catrinmodel.cateringbranch'),
        ),
        migrations.AddField(
            model_name='bankdetails',
            name='caterer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='bank_details', to='catrinmodel.cateringbranch'),
        ),
        migrations.AddField(
            model_name='address',
            name='caterer',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='address', to='catrinmodel.cateringbranch'),
        ),
        migrations.AddField(
            model_name='menucategory',
            name='branch',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='catrinmodel.cateringbranch'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='cateringbranch',
            name='branch_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='branches', to='catrinmodel.cateringservice'),
        ),
        migrations.AddField(
            model_name='order',
            name='caterer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='caterer_orders', to='catrinmodel.cateringservice'),
        ),
        migrations.AddField(
            model_name='payment',
            name='caterer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='caterer_bank_details', to='catrinmodel.cateringservice'),
        ),
        migrations.AddField(
            model_name='delivery',
            name='address',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='catrinmodel.address'),
        ),
        migrations.AddField(
            model_name='delivery',
            name='order',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='delivery_details', to='catrinmodel.order'),
        ),
        migrations.AddField(
            model_name='phonecontact',
            name='caterer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='branch_phone_contacts', to='catrinmodel.cateringbranch'),
        ),
        migrations.AddField(
            model_name='phonecontact',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='phone_contacts', to=settings.AUTH_USER_MODEL),
        ),
        migrations.DeleteModel(
            name='CatarerFood',
        ),
        migrations.DeleteModel(
            name='caterer',
        ),
        migrations.AddConstraint(
            model_name='bankdetails',
            constraint=models.UniqueConstraint(fields=('account_no', 'entity_type'), name='unique_account_per_entity'),
        ),
        migrations.AddConstraint(
            model_name='cateringbranch',
            constraint=models.UniqueConstraint(fields=('branch_id', 'branch_name'), name='unique_branch_name_per_catering_service'),
        ),
    ]
